q
c
n
s
n
s
c
q
current_sensor_status
n
send_help
c
sensor_exists?( sensor_mac )
sensor_exists?
q
all_macs
c
mac
all_macs
q
request_in
continue
request_in.keys
request_in
request_in.class
c
correct_password
c
@request["request"]["intent"]["slots"]
q
@request["request"]["intent"]["slots"]["password_response"]
@request["request"]["intent"]["slots"]
@request["request"]["intent"]
@request["request"]
q
Framework::ThinServer.methods - Class.methods
ThinServer.methods
Thin::Server.methods - Class.methods
Framework::AbstractServer.methods - Class.methods
Framework::AbstractServer.methods
log("some message")
continue
c
response.entries.size
response.entries
response
n
q
@db_client.methods - Class.methods
@db_client.methods 
@db_client
@db_client.class
c
q
@calling_class_instance
@calling_class_instance.methods - Class.methods
@calling_class_instance.methods
continue
Application.new.methods - Class.methods
Application.methods - Class.methods
Application.methods
Application.class
continue
q
@request["request"]
name
q
current_contacts
